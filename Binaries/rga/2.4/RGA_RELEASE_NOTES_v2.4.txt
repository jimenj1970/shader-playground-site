Radeon™ GPU Analyzer 2.4 - Release Notes
----------------------------------------

Highlights
----------
-	RGA is now available as part of the Radeon Developer Tool Suite on GPUOpen, together with RGP, RMV and RDP. For the best experience, we encourage you to use the suite to ensure compatibility between the different tools. On GitHub, we will continue the individual RGA source code and binary releases as usual.
-	Added support for gfx1030 targets (RX 5800, RX 5800 XT and RX 5900 XT) in DirectX® 12, DirectX® 11, Vulkan®, Vulkan-Offline, OpenGL® and OpenCL™ modes.
-	Added support for gfx1011 and gfx909 targets in DirectX 12, DirectX 11, Vulkan, Vulkan-offline and OpenGL modes.
-	DirectX 12 mode:
        o You can now enable the D3D® 12 debug layer to troubleshoot pipeline creation failures by adding the --debug-layer option to your command line.
        o For RDNA™ and Vega targets, you can now generate disassembly for the entire pipeline elf binary using the --elf-dis option.
        o Updated the DXC package that is bundled with the tool.
-	Vulkan mode:
        o   The tool can now digest disassembly from AMD's LLVM-based pipeline compiler (LLPC).
        o   RGA will now automatically pick the amdgpu-pro driver on machines where RADV installed.
-	Vulkan-offline mode: RGA now accepts Vulkan driver pipeline dumps as an input (.pipe files).
-	GUI application now remembers the window size for subsequent runs after closing.

- Notes:
    o The GUI application was renamed from "RadeonGPUAnalyzerGUI" to "RadeonGPUAnalyzer".
    o Legacy OpenCL mode (-s cl) is discontinued on Linux, with AMD's OpenCL stack moving to ROCr.

Notable Bug Fixes
-----------------
-	DirectX 12 mode:
        o For RDNA and Vega targets, the disassembly now reflects the correct hardware stage in cases where stages are merged.
        o Fixes to DirectX 12 mode command line tool help manual.

-	Vulkan mode: fixed an issue where the tool did not work on machines that did not have AMD driver installed. With this fix, the tool is again using a build of the Vulkan driver that is packaged with the tool.
-	GUI application:
        o Copying disassembly from the disassembly view to the clipboard now includes labels.
        o Ctrl+S in Global Setting view did not prompt the user with a confirmation dialog.
        o Fixed widget highlighting issues in Settings view.
-	Legacy OpenCL mode: live register analysis and control flow generation are now supported in this mode.
-	OpenGL: fixed --version option to print the system OpenGL version.
-	Linux: you can now invoke the tool from a path that contains whitespace characters.
-	Infrastructure: you can now use the --cli-only prebuild script option to generate the solution only for the command line tool.
-	[GitHub-69] Removed usage of obsolete Vulkan enumerations for integration with latest Vulkan SDK.
-	[GitHub-66] Added "X Vega M GL and AMD Radeon RX Vega M GH" product names.


Known Issues
------------
Vulkan Live Driver mode (-s vulkan)
-----------------------------------
-	Source to disassembly correlation is not supported by AMD's shader compiler at the moment and is therefore not supported in the UI.
-	Keyboard navigation is not supported from some views in the GUI application.
-	The RGA layer is a beta feature. It fails to extract the shaders and pipeline state from certain Vulkan apps.
-	Notifications about the fact that modified SPIR-V binary does not match the disassembly will not appear for loaded projects (in case that you changed the SPIR-V code, did not build and re-loaded the project).

ROCM OpenCL (rocm-cl mode)
--------------------------
-	RDNA targets are not supported as targets for ROCM-CL modes.
-	The Lightning Compiler does not support disassembling of binaries for Graphics IP v7 targets.
-	OpenCL C++ kernels are not yet supported by the Lightning Compiler.
-	No support for live register analysis and control-flow graph generation in this mode.

GUI Application
---------------
-	"Correlation Disabled" notification in the source code editor is not being saved for projects after they were closed.
-	Certain SALU instructions are being misclassified as VALU instructions.
-   Cycle estimate for certain VALU instructions appears as "Varies" instead of 4.

Legacy OpenCL (cl mode)
-----------------------
-	OpenCL mode (-s cl) does not support the following target devices: Bristol Ridge, Lexa (gfx804).
-	IL disassembly extraction is not supported when the compilation goes through the Lightning Compiler (the decision whether to compile through the Lightning Compiler is being done by the OpenCL driver and is not controlled by RGA).
-	Compilation is disabled in this mode for gfx900.

OpenGL (opengl mode)
--------------------
Resource usage statistics for OpenGL mode only displays usage of SGPRs and VGPRs.

DirectX 12 (dx12 mode)
----------------------
Live register analysis & CFG generation requires using the --isa option to generate ISA disassembly.

Vulkan offline (vk-offline, vk-spv-offline, vk-spv-txt-offline modes)
---------------------------------------------------------------------
SPIR-V support limitations:
---------------------------
a. The following capabilities, which are defined in the SPIR-V spec, are currently not supported:
CapabilityGroupNonUniformClustered,
CapabilityStoragePushConstant16,
CapabilityStoragePushConstant8,
CapabilityInputAttachmentArrayNonUniformIndexingEXT
CapabilityAddresses
CapabilityLinkage
CapabilityKernel
CapabilityVector16
CapabilityFloat16Buffer
CapabilityInt64Atomics
CapabilityImageBasic
CapabilityImageReadWrite
CapabilityImageMipmap
CapabilityPipes
CapabilityDeviceEnqueue
CapabilityLiteralSampler
CapabilityGenericPointer
CapabilityFragmentDensityEXT
CapabilityPhysicalStorageBufferAddressesEXT
CapabilitySampleMaskOverrideCoverageNV
CapabilityGeometryShaderPassthroughNV
CapabilityShaderViewportIndexLayerNV
CapabilityShaderViewportMaskNV
CapabilityShaderStereoViewNV
CapabilityPerViewAttributesNV
CapabilityMeshShadingNV
CapabilityImageFootprintNV
CapabilityFragmentBarycentricNV
CapabilityComputeDerivativeGroupQuadsNV
CapabilityShadingRateNV
CapabilityGroupNonUniformPartitionedNV
CapabilityRayTracingNV
CapabilityComputeDerivativeGroupLinearNV
CapabilitySubgroupShuffleINTEL
CapabilitySubgroupBufferBlockIOINTEL
CapabilitySubgroupImageBlockIOINTEL
b. SPIR-V modes currently only support the following extensions:
SPV_KHR_post_depth_coverage
SPV_KHR_shader_ballot
SPV_KHR_subgroup_vote
SPV_KHR_device_group
SPV_KHR_multiview
SPV_KHR_shader_draw_parameters
SPV_KHR_16bit_storage
SPV_KHR_storage_buffer_storage_class
SPV_KHR_8bit_storage
SPV_EXT_nonuniform_qualifier
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_AMD_shader_ballot
SPV_AMD_shader_trinary_minmax
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_texture_gather_bias_lod
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_KHR_variable_pointers
SPV_EXT_nonuniform_qualifier
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_KHR_vulkan_memory_model

Notes for OpenCL Mode Users
---------------------------
The legacy "-s cl" mode will continue to use the OpenCL compiler, which is included in the Adrenalin software package, while the "-s rocm-cl" mode is independent of the Adrenalin software. The "-s rocm-cl" mode uses the Lightning Compiler package that ships with RGA, which is based on clang.
As of version 2.0, RGA allows developers to replace the Lightning Compiler package that ships with the product with a user-provided LLVM-based package. For more information, see the Radeon GPU Analyzer GUI app's help manual, or run the command line tool with "-s rocm-cl -h" as arguments (look for the "Alternative ROCm OpenCL compiler" section).

Notes for DirectX 11 (dx11) Mode Users
--------------------------------------
RGA's DirectX 11 (-s dx11) mode will use the driver that is associated with the primary display adapter, by default. If your primary display adapter is not an AMD GPU, or if you would like RGA to use a driver that is associated with a different display adapter that is installed on your system, use the --adapters and --set-adapter <id> command line switches in order to instruct RGA to use the relevant driver.

System Requirements
-------------------
It is generally recommended to use RGA with the latest Radeon Adrenalin software version. Specifically, to target the RDNA architecture, the latest Radeon Adrenalin software version is required (except for all Vulkan modes and the rocm-cl mode, which are independent of the driver).

Vulkan (vulkan)
---------------
To use the installed driver in Vulkan mode:
    a.	Vulkan SDK 1.1.97.0 or later is required.
    b.	Latest Adrenalin software (amdgpu-pro on Linux) is required.

Otherwise, the tool would fall back to using the packaged Vulkan driver, which ships with the tool.

Vulkan offline (vk-offline, vk-spv-offline, vk-spv-txt-offline)
---------------------------------------------------------------
All Vulkan offline modes (vk-offline, vk-spv-offline and vk-spv-txt-offline) are independent of the installed driver and graphics hardware and should work on any x86-based system. 

DirectX 12 (dx12) and DirectX 11 (dx11)
---------------------------------------
It is recommended to use the latest Adrenalin software for the best experience in DirectX 12 and DirectX 11 modes.

Legacy OpenCL (cl mode)
-----------------------
On Windows, it is recommended to use the latest Adrenalin drivers for the best experience in Legacy OpenCL mode. On Windows, it is recommended to use the latest Adrenalin software for the best experience in Legacy OpenCL mode. Note that on Linux, Legacy OpenCL mode is discontinued, with AMD's OpenCL stack moving to ROCr.

ROCM OpenCL (rocm-cl mode)
--------------------------
ROCM OpenCL mode (rocm-cl) is independent of the installed driver and graphics hardware and should work on any x86-based system. 

OpenGL (-s opengl)
------------------
OpenGL mode on Linux requires the latest amdgpu-pro driver.












